name: Build and Test

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ] # Trigger on pushes to the main branch
  pull_request:
    branches: [ "main" ] # Trigger on pull requests targeting the main branch
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    name: Build and Test
    runs-on: macos-latest # Use the latest macOS runner available

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Select Xcode Version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'  # Specify your Xcode version here.  Use 'latest-stable' for the latest stable release, or a specific version like '14.3', '15.0.1', etc.

    - name: Install Dependencies (if needed)
      #  Add steps here if you use CocoaPods, Carthage, or Swift Package Manager.
      #  These are *conditional* and depend on your project's setup.
      # --- CocoaPods Example ---
      # run: pod install --repo-update
      # --- Carthage Example ---
      # run: carthage update --use-xcframeworks
      # --- Swift Package Manager (usually no explicit install needed) ---

    - name: Build the Project
      run: |
        xcodebuild build \
          -project YourProject.xcodeproj \  # Replace with your project name (if using a .xcodeproj)
          # OR, if you're using a workspace:
          # -workspace YourWorkspace.xcworkspace \ # Replace with your workspace name (if using a .xcworkspace)
          -scheme YourScheme \         # Replace with your scheme name
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \ # Specify the simulator or device.  Very important!
          CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO  # Disable code signing for this build (optional, for simpler builds)
      # Add these environment variables if it makes errors about certificates.
      env:
        DEVELOPER_DIR: /Applications/Xcode_15.0.app/Contents/Developer

    - name: Run Tests (Optional)
      run: |
        xcodebuild test \
          -project YourProject.xcodeproj \  # Or -workspace if you have a workspace
          -scheme YourScheme \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
      env:
         DEVELOPER_DIR: /Applications/Xcode_15.0.app/Contents/Developer

    # --- Optional Steps (Add as needed) ---

    # - name: Archive the App (for creating an .ipa)
    #   run: |
    #     xcodebuild archive \
    #       -project YourProject.xcodeproj \  # Or -workspace
    #       -scheme YourScheme \
    #       -archivePath YourApp.xcarchive \
    #       -destination 'generic/platform=iOS' \ # Use 'generic/platform=iOS' for archiving
    #       CODE_SIGN_IDENTITY="Your Signing Identity" #  <-- YOU MUST CONFIGURE CODE SIGNING FOR ARCHIVING!
    #       CODE_SIGNING_REQUIRED=YES
    #       PROVISIONING_PROFILE_SPECIFIER="Your Provisioning Profile Name" # <-- YOU MUST CONFIGURE PROVISIONING!

    # - name: Upload Artifact (e.g., the .xcarchive)
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: ios-build-artifact
    #     path: YourApp.xcarchive  # Path to the artifact you want to upload

    # - name: Notify on Failure (Example with Slack)
    #   if: failure()  # This step only runs if a previous step fails
    #   uses: slackapi/slack-github-action@v1.24
    #   with:
    #     channel-id: 'YOUR_SLACK_CHANNEL_ID'  # Replace with your Slack channel ID
    #     payload: |
    #       {
    #         "text": "iOS Build Failed! :rotating_light:",
    #         "attachments": [
    #           {
    #             "color": "#ff0000",  # Red color for failure
    #             "fields": [
    #               {
    #                 "title": "Workflow",
    #                 "value": "${{ github.workflow }}",
    #                 "short": true
    #               },
    #               {
    #                 "title": "Commit",
    #                 "value": "${{ github.sha }}",
    #                 "short": true
    #               }
    #             ]
    #           }
    #         ]
    #       }
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} #  <--  Add this as a secret in your repository settings!

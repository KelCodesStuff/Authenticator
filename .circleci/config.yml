# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to build and test an iOS app using macOS executor.
jobs:
  build-and-test-ios:
    # Use macOS executor with an appropriate Xcode version.
    macos:
      xcode: "14.0.0"  # Specify the Xcode version your project requires.
    
    # Define the steps for building and testing the app.
    steps:
      - checkout  # Check out the project from the repository.

      # Install dependencies (e.g., CocoaPods, Carthage).
      - run:
          name: "Install Dependencies"
          command: |
            # Install CocoaPods, you can adjust this step if you're using Carthage or SPM.

      # Build the iOS app using Xcode.
      - run:
          name: "Build iOS App"
          command: |
            xcodebuild \
              -workspace YourApp.xcworkspace \  # Replace with your workspace file.
              -scheme YourAppScheme \  # Replace with your scheme.
              -sdk iphonesimulator \  # Specify the iOS simulator SDK.
              -configuration Debug \  # Use Debug configuration for development.
              clean build  # Clean and build the app.

      # Run unit tests on the iOS simulator.
      - run:
          name: "Run Unit Tests"
          command: |
            xcodebuild \
              -workspace YourApp.xcworkspace \  # Replace with your workspace file.
              -scheme YourAppScheme \  # Replace with your scheme.
              -sdk iphonesimulator \  # Specify the iOS simulator SDK.
              -configuration Debug \  # Use Debug configuration for development.
              -destination 'platform=iOS Simulator,name=iPhone 14' \  # Specify the simulator type.
              clean test  # Clean and run tests.

# Define the workflow that orchestrates the build and test jobs.
workflows:
  build-and-test:
    jobs:
      - build-and-test-ios  # Execute the iOS build and test job.

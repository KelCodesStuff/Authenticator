version: 2.1

jobs:
  build:
    macos:
      xcode: "16.1.0"
    environment:
      PROJECT_NAME: Authenticator.xcodeproj
      SCHEME_NAME: Authenticator
      DESTINATION: 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=latest'
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-spm-{{ arch }}-{{ checksum "Package.resolved" }}
            - v1-spm-{{ arch }}-
      - run:
          name: Decode GoogleService-Info.plist
          command: |
            echo $GOOGLE_SERVICE_INFO_PLIST | base64 --decode > GoogleService-Info.plist
      - run:
          name: "Build"
          command: |
            xcodebuild clean build -project "$PROJECT_NAME" -scheme "$SCHEME_NAME" -destination "$DESTINATION" -configuration Debug CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
      - save_cache:
          paths:
            - ~/Library/Caches/org.swift.swiftpm
            - .build
          key: v1-spm-{{ arch }}-{{ checksum "Package.resolved" }}

  run-unit-tests:
    macos:
      xcode: "16.1.0"
    environment:
      PROJECT_NAME: Authenticator.xcodeproj
      SCHEME_NAME: Authenticator
      DESTINATION: 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=latest'
      TEST_PLAN_NAME: "Unit-Smoke-Tests"
    steps:
      - checkout
      - run:
          name: "Run Unit Smoke Tests"
          command: |
            xcodebuild test -project "$PROJECT_NAME" -scheme "$SCHEME_NAME" -destination "$DESTINATION" -configuration Debug -enableCodeCoverage YES -testPlan "$TEST_PLAN_NAME"
      - store_artifacts:
          path: build/Logs/Test
          destination: unit-test-results

  run-performance-tests:
    macos:
      xcode: "16.1.0"
    environment:
      PROJECT_NAME: Authenticator.xcodeproj
      SCHEME_NAME: Authenticator
      DESTINATION: 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=latest'
      TEST_PLAN_NAME: "Performance-Smoke-Tests"
    steps:
      - checkout
      - run:
          name: "Run Performance Smoke Tests"
          command: |
            xcodebuild test -project "$PROJECT_NAME" -scheme "$SCHEME_NAME" -destination "$DESTINATION" -configuration Debug -enableCodeCoverage YES -testPlan "$TEST_PLAN_NAME"
      - store_artifacts:
          path: build/Logs/Test
          destination: performance-test-results

  run-ui-tests:
    macos:
      xcode: "16.1.0"
    environment:
      PROJECT_NAME: Authenticator.xcodeproj
      SCHEME_NAME: Authenticator
      DESTINATION: 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=latest'
      TEST_PLAN_NAME: "UI-Smoke-Tests"
    steps:
      - checkout
      - run:
          name: "Run UI Smoke Tests"
          command: |
            xcodebuild test -project "$PROJECT_NAME" -scheme "$SCHEME_NAME" -destination "$DESTINATION" -configuration Debug -enableCodeCoverage YES -testPlan "$TEST_PLAN_NAME"
      - store_artifacts:
          path: build/Logs/Test
          destination: ui-test-results

  upload-coverage:
    macos:
      xcode: "16.1.0"
    steps:
      - checkout
      - run:
          name: "Generate Code Coverage Report"
          command: |
            xccov generate --archive build/Logs/Test/*.xcresult --output codecov.json
      - run:
          name: "Upload Code Coverage Reports"
          command: |
            curl -Os https://uploader.codecov.io/latest/macos/codecov
            chmod +x codecov
            ./codecov -f codecov.json
      - store_artifacts:
          path: codecov.json
          destination: coverage-report

workflows:
  build-and-test-workflow:
    jobs:
      - build
      - run-unit-tests:
          requires:
            - build
      - run-performance-tests:
          requires:
            - build
      - run-ui-tests:
          requires:
            - build
      - upload-coverage:
          requires:
            - run-unit-tests
            - run-performance-tests
            - run-ui-tests
          filters:
            branches:
              only:
                - main
                - develop
          context:
            - org-global

version: 2.1

jobs:
  build: # Separate build job
    macos:
      xcode: "16.1.0"
    environment:
      PROJECT_NAME: Authenticator.xcodeproj
      SCHEME_NAME: Authenticator
      DESTINATION: 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=latest'
    steps:
      - checkout # Correct order: checkout first
      - restore_cache:
          keys:
            - v1-spm-{{ arch }}-{{ checksum "Package.resolved" }} # Correct path
            - v1-spm-{{ arch }}-
      - run:
          name: "Build"
          command: |
            xcodebuild clean build -project "$PROJECT_NAME" -scheme "$SCHEME_NAME" -destination "$DESTINATION" -configuration Debug CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
      - save_cache:
          paths:
            - ~/Library/Caches/org.swift.swiftpm
            # Remove .build from here, as it's likely in DerivedData
          key: v1-spm-{{ arch }}-{{ checksum "Package.resolved" }} # Correct path
      - persist_to_workspace:  # Persist build artifacts
          root: .
          paths:
            - build  # Persist whatever is in the 'build' directory

  test-ui:
    macos:
      xcode: "16.1.0"
    environment:
      PROJECT_NAME: Authenticator.xcodeproj
      SCHEME_NAME: Authenticator
      DESTINATION: 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=latest'
      TEST_PLAN_NAME: "UI-Smoke-Tests"
    steps:
      - checkout
      - attach_workspace: # Attach the workspace from the build job
          at: .
      - run:
          name: "Run UI Smoke Tests"
          command: |
            xcodebuild test -project "$PROJECT_NAME" -scheme "$SCHEME_NAME" -destination "$DESTINATION" -configuration Debug -enableCodeCoverage YES -testPlan "$TEST_PLAN_NAME"
      - store_test_results:
          path: build/reports #  Correct path
      - store_artifacts:
          path: build/reports # Correct path
          destination: ui-coverage-reports

  test-unit:
    macos:
      xcode: "16.1.0"
    environment:
      PROJECT_NAME: Authenticator.xcodeproj
      SCHEME_NAME: Authenticator
      DESTINATION: 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=latest'
      TEST_PLAN_NAME: "Unit-Smoke-Tests"
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "Run Unit Smoke Tests"
          command: |
            xcodebuild test -project "$PROJECT_NAME" -scheme "$SCHEME_NAME" -destination "$DESTINATION" -configuration Debug -enableCodeCoverage YES -testPlan "$TEST_PLAN_NAME"
      - store_test_results:
          path: build/reports # Correct Path
      - store_artifacts:
          path: build/reports # Correct Path
          destination: unit-coverage-reports

  test-performance:
    macos:
      xcode: "16.1.0"
    environment:
      PROJECT_NAME: Authenticator.xcodeproj
      SCHEME_NAME: Authenticator
      DESTINATION: 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=latest'
      TEST_PLAN_NAME: "Performance-Smoke-Tests"
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "Run Performance Smoke Tests"
          command: |
            xcodebuild test -project "$PROJECT_NAME" -scheme "$SCHEME_NAME" -destination "$DESTINATION" -configuration Debug -enableCodeCoverage YES -testPlan "$TEST_PLAN_NAME"
      - store_test_results:
          path: build/reports #Correct Path
      - store_artifacts:
          path: build/reports # Correct Path
          destination: performance-coverage-reports

workflows:
  build-and-test-workflow:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
                - develop
          context:
            - org-global
      - test-ui:
          requires:
            - build  # test-ui depends on build
          filters:
            branches:
              only:
                - main
                - develop
          context:
            - org-global
      - test-unit:
          requires:
            - build # test-unit depends on build
          filters:
            branches:
              only:
                - main
                - develop
          context:
            - org-global
      - test-performance:
          requires:
            - build # test-performance depends on build
          filters:
            branches:
              only:
                - main
                - develop
          context:
            - org-global
